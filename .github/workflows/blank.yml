name: Conda Build & Upload

on:
  release:
    types: [published]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
        - os: ubuntu-latest
          conda_subdir: linux-32
        - os: macos-latest
          conda_subdir: osx-arm64

    steps:
      - uses: actions/checkout@v3

      - name: Set up Miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          auto-activate-base: false
          miniconda-version: latest
          channels: conda-forge,defaults
          channel-priority: strict

      - name: Install conda-build & anaconda-client
        shell: bash
        run: |
          # On Mac, also install clang_osx-64 to get newer Clang that supports Xcode 15 TAPI.
          if [[ "$RUNNER_OS" == "macOS" ]]; then
            conda install -y conda-build anaconda-client clang_osx-64 clangxx_osx-64
          else
            conda install -y conda-build anaconda-client
          fi

      - name: Build Conda Package
        shell: bash
        run: |
          # If conda_subdir is set (non-empty), configure subdir
          if [[ -n "${{ matrix.conda_subdir }}" ]]; then
            conda config --env --set subdir "${{ matrix.conda_subdir }}"
            echo "Building for CONDA_SUBDIR=${{ matrix.conda_subdir }}"
          else
            echo "Building for default CONDA_SUBDIR"
          fi
          conda build . --debug --verbose



      - name: Upload Package to Anaconda
        if: success()  # or only if build is successful
        env:
          ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        shell: bash
        run: |
          built_pkg=$(conda build . --output)
          echo "Built package: $built_pkg"
          conda run -n base anaconda -t "$ANACONDA_API_TOKEN" upload \
            --user yaalshama --label main --force "$built_pkg"
