name: Conda Build & Upload

on:
  release:
    types: [published]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-14-arm64]  # Explicit ARM64 macOS runner

    steps:
      - uses: actions/checkout@v3

      - name: Set up ARM64 Miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          auto-activate-base: false
          miniconda-version: latest
          architecture: arm64  # Force ARM64 installation
          channels: conda-forge,defaults
          channel-priority: strict
          python-version: "3.12"

      - name: Configure ARM64 environment
        if: runner.os == 'macOS'
        run: |
          echo "CONDA_SUBDIR=osx-arm64" >> $GITHUB_ENV
          conda config --set subdir osx-arm64

      - name: Install ARM64 dependencies
        if: runner.os == 'macOS'
        run: |
          conda install -y -c conda-forge \
            conda-build \
            anaconda-client \
            clang_osx-arm64 \
            clangxx_osx-arm64 \
            libffi=3.4.4 \
            ctypes
          sudo xcode-select --switch /Applications/Xcode_15.2.app/Contents/Developer
          export SDKROOT=/Applications/Xcode_15.2.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk

      - name: Install Linux dependencies
        if: runner.os == 'Linux'
        run: |
          conda install -y conda-build anaconda-client

      - name: Build Conda Package
        run: |
          conda clean --all --yes
          conda build --no-plugins . --override-channels -c conda-forge -c defaults

      - name: Upload Package
        if: success()
        env:
          ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        run: |
          built_pkg=$(conda build . --output)
          anaconda -t "$ANACONDA_API_TOKEN" upload --user COBRALab --label main --force "$built_pkg"
